package main

import (
	"fmt"
	"os"
	"strconv"
	"strings"
)

const (
	test  = "00100\n11110\n10110\n10111\n10101\n01111\n00111\n11100\n10000\n11001\n00010\n01010"
	input = "000001100010\n100111011010\n001100011001\n011010001010\n011010101011\n001001110101\n100110001101\n100010010011\n011110000110\n011000110110\n011111111110\n100111110011\n110000100101\n011010011111\n001010011101\n110110001010\n101111110101\n000010101101\n111010111110\n111110001110\n100110111011\n101011010101\n001001000101\n111101000100\n001100000010\n010001100101\n001010011111\n101010010100\n100001110011\n100000111010\n100101010101\n000000101000\n011010100011\n110100111110\n010010011000\n000101000010\n001100011100\n011101000000\n010110111010\n101101100100\n000000010011\n000101001111\n011011100111\n101111100101\n101001101011\n101100010100\n001001110111\n110011011110\n111001101000\n101101111111\n001100110100\n000001000111\n000111101111\n110101011100\n010111011100\n010011101000\n100011101011\n110000110011\n110000100010\n100101001110\n011000001100\n100000101110\n101010110001\n000111101110\n011111101111\n000000100010\n101000010100\n011000111001\n001011001101\n011111111111\n100111000100\n101010011010\n001100100011\n011101011110\n011111100010\n110111110011\n111011111010\n000101101011\n001111011011\n000011101000\n000101111011\n000010100110\n111001000100\n011110001111\n010001011000\n100010100100\n100100111100\n010010010101\n001101110011\n000000010000\n000110001100\n100110110111\n001000100100\n101010111010\n000011101100\n100000100001\n011111110000\n101001001111\n100000111111\n110111000111\n111000010001\n011011011111\n110011011010\n100011010101\n011110010100\n001001101010\n100100111000\n100110110011\n010010111000\n111011101111\n111001101010\n100000010011\n011011101111\n011100101011\n110101011000\n101111011110\n100111000010\n001110110101\n111001111100\n010000110111\n011100001010\n110111110101\n011011100010\n111101101000\n101000000111\n110000001001\n001100101101\n100111100010\n000100010100\n111101100110\n101001010001\n011000000001\n010100100100\n010001001000\n010000010111\n100011110001\n000011100110\n001001000001\n000100001100\n001001101111\n001001100000\n000111011100\n100001010110\n101010001110\n010010101001\n110010001100\n101011101100\n111000110111\n100011010100\n001110001101\n101011011010\n110101011010\n011100010001\n010011010011\n001011111001\n100011101100\n011101100011\n010000011111\n011001101011\n011110011100\n001100011010\n101100001110\n011001111101\n100101011111\n011111100001\n111001010111\n010111000100\n111110110111\n100011011001\n100000010000\n111110111111\n101111101011\n110011010011\n100001111110\n101011011011\n110111111110\n101110101001\n011100001100\n000101011100\n011010100111\n110111011000\n100110111100\n111010001100\n010010011111\n000011010100\n010111101111\n111111000011\n000111111010\n000011111111\n010010001010\n100101110010\n111110010100\n111110000000\n111110111110\n110010100111\n110011000010\n001101010011\n100100010001\n101010110110\n110110011100\n111111001011\n000011010001\n010111011001\n010100100010\n010001101100\n001101001110\n010101000100\n111010010010\n000100100101\n000011001001\n011000110111\n010111110111\n011000100110\n011110001110\n011100111010\n001111101100\n100100001100\n001100110101\n011101111001\n100001000000\n110100001010\n110111111000\n010110010001\n110010011101\n101101011111\n111111100110\n101110001000\n111100110100\n110001111011\n001011000011\n011000000100\n101100000001\n001110000100\n111110001111\n100001001101\n111111111011\n101101110001\n111001110111\n100001101000\n001100101001\n000101000000\n001011111011\n000001011111\n100000101011\n101100000000\n101110001001\n110111111010\n010000011000\n110111100100\n001100010011\n111111100100\n101011010100\n101101001100\n110110101001\n011001101000\n011101110001\n010010010000\n110001010101\n110111110001\n100011111110\n110011111101\n011111110110\n110110101101\n000010111000\n111110011000\n100111101110\n101011000010\n111101111000\n001001110010\n011000100101\n011010100100\n101111010001\n111101101011\n101110100110\n011111100000\n000101100001\n110100100000\n010011110111\n001011010011\n010001101111\n100111110010\n100111010001\n110001111111\n000110110011\n000100000101\n011111111001\n110011100110\n111011000110\n100101101101\n001111000010\n001101011100\n011001101111\n101110111100\n110011001110\n011001011000\n110010001001\n000100000110\n011101001000\n100111010111\n000101010000\n011110110110\n010110111001\n111110100101\n100100011010\n111011100110\n100111010000\n011111100111\n101010100001\n110001101110\n000101000001\n010011011100\n111101011111\n101001100111\n011101111000\n100001100111\n110011001001\n011101000111\n000011011100\n100111001001\n001001101100\n101101111101\n100100001111\n111100111011\n010011000001\n000101010101\n000100100010\n100001011100\n110011100010\n010110011010\n001110100001\n001110111011\n101110100111\n011101101110\n110100101110\n111101110010\n001001110110\n100011010111\n111110101100\n011100111101\n001010000100\n000111001111\n110101010110\n101010101011\n011101011000\n111000111010\n000010011001\n011010111101\n000111111101\n000010111101\n111011000000\n111100001100\n110101111111\n000111011000\n010010001111\n100011101000\n110100010001\n110101001111\n100011100100\n000010111100\n011010010011\n111001000010\n101010101111\n110100101010\n001100101011\n001111101011\n000011100111\n111011001001\n110110000010\n010000010011\n010110110010\n110100100101\n001101110101\n001011001011\n010100100000\n000010000000\n110110011101\n101001100011\n010111000001\n001111100111\n110111111101\n011010100000\n011011110101\n011110100001\n010100110001\n100000000101\n010011101111\n101111110111\n101000100100\n011010101001\n010000000110\n110011110111\n010011011011\n101101101111\n001111011101\n100111101111\n000111000101\n100100101010\n011110011110\n010011101110\n000000100110\n010100110101\n101101010100\n101001000010\n111000000110\n010001000000\n000100010110\n110101101001\n010010111110\n010011100001\n001011111111\n111001101001\n111100001110\n101110010101\n111101111011\n110011010000\n111101011011\n111100101101\n111010100110\n111000001011\n011011001011\n000000010010\n100100000000\n110011111001\n010000101000\n111010110100\n010101101011\n111111001111\n010101001110\n101110111011\n011101111010\n101110110011\n000110111101\n111100011100\n000010101001\n000011011010\n100010011100\n000110100001\n101001111110\n000010100010\n001110000000\n100011100110\n010011110110\n110000111000\n010110001110\n110001100011\n001010000011\n101001010000\n101110110100\n111010000100\n111011011001\n000100001011\n011010001101\n011000101000\n011101011100\n110111110100\n101000000010\n101000100011\n011101110011\n011100011010\n001010001111\n001011101011\n100001010010\n111110111101\n110000010001\n011001010101\n100100101000\n110000000111\n001111110101\n101000010010\n011110111100\n101111111000\n000011101101\n110001100110\n001111011000\n000011000100\n001101000010\n011111111000\n011111001010\n000110000010\n010000010110\n101111000010\n001101111101\n101011101010\n101110110010\n001000000111\n100000101001\n011111110010\n011001100100\n011010010111\n001010110011\n001001011010\n000111000001\n000111000000\n011000001111\n010001001101\n001100010110\n010100000011\n110110110100\n011100000100\n101111000101\n110101010010\n001110010111\n110000011010\n000110100000\n111101000011\n000100011100\n010010100010\n000000010001\n110001111101\n100011001101\n010011110011\n000101010001\n110111101001\n110010000011\n100100000101\n100001010101\n111111111110\n100011101101\n100100100011\n110000001111\n010101001010\n101000111000\n010010011100\n110011101001\n011101011111\n011111001011\n111110011100\n010001111111\n100011110100\n010000001101\n100111111100\n101000101011\n110110101011\n110101001100\n101010110010\n110110100011\n001001010001\n011110010000\n000001111111\n101010101000\n010001111101\n100110101111\n100101000011\n001010110010\n001111001100\n100101011100\n111001000101\n010100100101\n100010101101\n100101110001\n101000100010\n110101111110\n111100110110\n100101100100\n001000001100\n010011110001\n011100101000\n101111101010\n100101100001\n000110000000\n001001001111\n001111100000\n111110001011\n011110011010\n111001100110\n000010100000\n010110110001\n100111001101\n111101010110\n110001010100\n110110100000\n011100000011\n100101110111\n000001000011\n100100100110\n111100000010\n100110110100\n000101111110\n001110100110\n010101110100\n111010110101\n000001100111\n100010001101\n101011011111\n010011111101\n101010011111\n000011111000\n110001100000\n100010111011\n010111101011\n010100101011\n100010001110\n111100000100\n101011101110\n000101100011\n100000111000\n110011001010\n000001110011\n000111010100\n111110110100\n100101011001\n110010010001\n010100111101\n111100100000\n101000110000\n011101111111\n001101111111\n001001000110\n000001100110\n110100101000\n001111000000\n111101100010\n100111001011\n001001100101\n100000001001\n101010100101\n010001000010\n111100000000\n001100010101\n101111111101\n110100010100\n101000100101\n111001010000\n011001000100\n011110011011\n101100010011\n100100110111\n111100101011\n011100100110\n000111001001\n111101101001\n001111101111\n101111111001\n101100110101\n101000011000\n100100011111\n101011001011\n001101111001\n111010011100\n001011000001\n100011001110\n101101010010\n111000101010\n101101100110\n101111010100\n101011000100\n100111111010\n110110001011\n100101001001\n110001101100\n010000100000\n110100010010\n101011110001\n001000011010\n001011110000\n101111010110\n000101110111\n110111110000\n101110001100\n111010110001\n010001110001\n100010001000\n001001000111\n100010110010\n000011100101\n111111000111\n010010001110\n011011011110\n111110100011\n101111111111\n000010011111\n010101011101\n101101011011\n001111010111\n001010010100\n101010111001\n010110111111\n000110111110\n001101101100\n011000101001\n110011000001\n100111001010\n001101011010\n100000100111\n110100010111\n100000111001\n100011011111\n010111100011\n110111000010\n011110101001\n010110101000\n011110111110\n110000110001\n100100001010\n011111001000\n110110110010\n011000101011\n000000000010\n000010000100\n110000000011\n011111101101\n011000101101\n110011101110\n000000001001\n101001110010\n101101000001\n011011001111\n110010010010\n000100101011\n010111010001\n111101000110\n111010111111\n111001010100\n011010110101\n001001000010\n011001000010\n000000101101\n010000111110\n010011100101\n100111000110\n111111001100\n101100100110\n011110100110\n001110101101\n001101001000\n111111011000\n011100100000\n001000011001\n001001111111\n111010011011\n001001111101\n101000110110\n100000111101\n001011000110\n100010010010\n101010011001\n101010110011\n101010110000\n000001000110\n001101110110\n010010011011\n101111110000\n011110001011\n001011111100\n111011111111\n101101010111\n000001010101\n010110101111\n111100000001\n010101100010\n101111010011\n010001011010\n011100101101\n111100101010\n001100111001\n001101000111\n011010111010\n010011100000\n110000011001\n111101100101\n010111101110\n011110001010\n011101000100\n011000110011\n110111001000\n011000001001\n010111111001\n111001110010\n110110110000\n000100110000\n101011110110\n111000011010\n011001110100\n100011101001\n111010110110\n000110100010\n011101010110\n001100111010\n010010101101\n000101110011\n100000000010\n100111100011\n101110111000\n100001111011\n001111001000\n000110010110\n010001110101\n111100010011\n100000010101\n111111111101\n000001001100\n100111111110\n111100110001\n111000100011\n110101100110\n000101010100\n010000001001\n011010000011\n011011011000\n101100011010\n101001001011\n000010110111\n101111000111\n100101010001\n001111011001\n000010111111\n010001010100\n011110101111\n001110101010\n010000001100\n011011101011\n100111110100\n101101100101\n101101000011\n111110101111\n110010110110\n100011000101\n011011110011\n101010101100\n001101000001\n100010111010\n100101011101\n101011000001\n101100000011\n001011000100\n000011100000\n010110001011\n000111111100\n111011000011\n110100111001\n001110001110\n001010100001\n110111111001\n011011101110\n010100010000\n101011111000\n010001100001\n000001010111\n110011101010\n001110111110\n011101110110\n010110001000\n110101111010\n100101100000\n000100111001\n110110111010\n111010010101\n110111111100\n010101010111\n100001011110\n010101001001\n001101011101\n011100100100\n010001110111\n100111001100\n101010111011\n100000111110\n101111011011\n011110110001\n000100000100\n010111100100\n110101010111\n101101101011\n110101101010\n001010000111\n111001111111\n100100011001\n101111010000\n110111011010\n110001110101\n011100001001\n001111100011\n000100010111\n100110010011\n011110011001\n010110001111\n011111011010\n111011111000\n011110111101\n000001000100\n111000010000\n010010000101\n011100100111\n110001001000\n110100111111\n100000010110\n110111100011\n101001110100\n001001011001\n010011100111\n101001010011\n101000001101\n000100001111\n111111011111\n000101001010\n011011010010\n101010000101\n001101001010\n000001100001\n010010110100\n010011000010\n111110011111\n010011111011\n111100010111\n000000010100\n110011011111\n000100110100\n011001000101\n010110100011\n100011010011\n010111001110\n100101010000\n001001010110\n110000001000\n101111110001\n101101001101\n010100000100\n100101111010\n001111011010\n101110011111\n110000010111\n100011011110\n000000100111\n010111010111\n100001011011\n101001011010\n001111001111\n110101100001\n010010011101\n010010101011\n111100111111\n000110110000\n000100100110\n100100111001\n011100101001\n110011100000\n100111111001\n101011110100\n001010101001\n011111010110\n110010110100\n111101011000\n100110011000\n100100001000\n010111100001\n111001110011\n100110100011\n011000011001\n000000000100\n000010110010\n011010111000\n010111010000\n011000100010\n100110011100\n101110011000\n001100100010\n010100111100\n001101101010\n110111100001\n101110010000\n000000110100\n111010000001\n010011001001\n000010001100\n001001101101\n010010000011\n011111100110\n111010000101\n110101110000\n010011001100\n100101111111\n000010001110\n111100001011\n111100110111\n110101000100\n000111110111\n011100011101\n110011101101\n000101100111\n101100101100\n111110101000\n000110101011\n010110011110\n000000111000\n100000000100\n110101101000\n101011100101\n101111000000\n110111000001\n010001100110\n110010010100\n111011010111\n101110011110\n111100110000\n001101110010\n010010100001\n000111100110\n010000110000\n001011010000\n110011010100"
)

func main() {
	if os.Getenv("PART") == "part1" {
		fmt.Printf("\npart1:\n")
		part1()
	}

	if os.Getenv("PART") == "part2" {
		fmt.Printf("\npart2:\n")
		part2()
	}
}

func part1() {
	zeroes := map[int]int{}
	ones := map[int]int{}

	for _, l := range strings.Split(input, "\n") {
		for i, d := range []rune(l) {
			switch d {
			case '0':
				zeroes[i] += 1
			case '1':
				ones[i] += 1
			}
		}
	}

	gammaString := ""
	epsilonString := ""
	for i := 0; i < len(zeroes); i++ {
		if zeroes[i] > ones[i] {
			gammaString = fmt.Sprintf("%s0", gammaString)
		} else {
			gammaString = fmt.Sprintf("%s1", gammaString)
		}

		if zeroes[i] < ones[i] {
			epsilonString = fmt.Sprintf("%s0", epsilonString)
		} else {
			epsilonString = fmt.Sprintf("%s1", epsilonString)
		}
	}

	gammaRate, err := strconv.ParseInt(gammaString, 2, 64)
	if err != nil {
		panic(err)
	}

	epsilonRate, err := strconv.ParseInt(epsilonString, 2, 64)
	if err != nil {
		panic(err)
	}

	fmt.Printf("gammaRate: %d\nepsilonRate: %d\n", gammaRate, epsilonRate)
	fmt.Printf("product: %d\n", gammaRate*epsilonRate)
}

func part2() {
	allNumbers := strings.Split(input, "\n")
	oxygen, err := getOxygen(allNumbers)
	if err != nil {
		panic(err)
	}

	co2, err := getCo2(allNumbers)
	if err != nil {
		panic(err)
	}

	fmt.Printf("oxygen: %v\nco2: %d\nproduct: %d\n", oxygen, co2, oxygen*co2)

}

func getOxygen(numbers []string) (int64, error) {
	candidates := numbers
	col := -1
	for len(candidates) > 1 {
		col++
		ones := 0
		zeroes := 0
		rows := map[int]int{}
		for i := range candidates {
			if candidates[i][col] == '1' {
				ones++
				rows[i] = 1
			} else {
				zeroes++
				rows[i] = 0
			}

		}

		var toKeep int
		if ones < zeroes {
			toKeep = 0
		} else {
			toKeep = 1
		}

		newCandidates := []string{}
		for k, v := range rows {
			if v == toKeep {
				newCandidates = append(newCandidates, candidates[k])
			}
		}
		candidates = newCandidates
	}

	return strconv.ParseInt(candidates[0], 2, 64)
}

func getCo2(numbers []string) (int64, error) {
	candidates := numbers
	col := -1
	for len(candidates) > 1 {
		col++
		ones := 0
		zeroes := 0
		rows := map[int]int{}
		for i := range candidates {
			if candidates[i][col] == '1' {
				ones++
				rows[i] = 1
			} else {
				zeroes++
				rows[i] = 0
			}

		}

		var toKeep int
		if ones < zeroes {
			toKeep = 1
		} else if zeroes < ones {
			toKeep = 0
		} else {
			toKeep = 0
		}

		newCandidates := []string{}
		for k, v := range rows {
			if v == toKeep {
				newCandidates = append(newCandidates, candidates[k])
			}
		}
		candidates = newCandidates
	}

	return strconv.ParseInt(candidates[0], 2, 64)
}
