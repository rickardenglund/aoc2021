package main

import (
	"fmt"
	"os"
	"strconv"
	"strings"
)

const (
	test  = "0,9 -> 5,9\n8,0 -> 0,8\n9,4 -> 3,4\n2,2 -> 2,1\n7,0 -> 7,4\n6,4 -> 2,0\n0,9 -> 2,9\n3,4 -> 1,4\n0,0 -> 8,8\n5,5 -> 8,2"
	input = "284,294 -> 733,743\n625,347 -> 653,375\n561,848 -> 561,181\n836,102 -> 836,339\n946,941 -> 22,17\n18,954 -> 956,16\n370,142 -> 370,700\n990,966 -> 677,966\n366,603 -> 366,465\n728,942 -> 57,271\n615,493 -> 847,493\n584,281 -> 301,281\n125,356 -> 301,180\n941,569 -> 555,183\n151,116 -> 509,116\n41,18 -> 841,818\n627,670 -> 627,630\n965,472 -> 965,100\n93,404 -> 330,641\n475,963 -> 475,514\n389,389 -> 389,326\n842,565 -> 842,576\n454,700 -> 650,700\n73,810 -> 73,319\n450,212 -> 450,284\n316,392 -> 316,697\n915,592 -> 578,592\n622,485 -> 434,485\n109,853 -> 952,10\n305,73 -> 305,222\n27,489 -> 157,489\n191,979 -> 867,979\n527,329 -> 527,292\n301,645 -> 301,162\n639,730 -> 176,730\n46,964 -> 46,458\n727,422 -> 435,714\n28,552 -> 404,552\n33,108 -> 33,21\n227,249 -> 327,249\n414,903 -> 784,903\n69,422 -> 888,422\n422,924 -> 103,605\n793,353 -> 450,10\n714,682 -> 714,972\n201,745 -> 410,745\n408,713 -> 408,847\n174,842 -> 818,198\n863,353 -> 775,353\n199,780 -> 670,780\n877,947 -> 340,410\n163,202 -> 163,91\n955,919 -> 955,585\n836,271 -> 533,271\n258,366 -> 728,836\n582,749 -> 582,12\n80,40 -> 80,704\n287,213 -> 287,635\n390,546 -> 390,194\n837,511 -> 538,810\n473,281 -> 902,281\n851,865 -> 731,745\n918,59 -> 445,532\n796,215 -> 796,248\n875,111 -> 604,111\n660,805 -> 538,805\n507,850 -> 145,850\n585,861 -> 585,52\n426,74 -> 700,348\n206,405 -> 529,405\n418,333 -> 418,17\n368,457 -> 33,792\n186,81 -> 957,852\n505,283 -> 113,283\n20,878 -> 462,878\n750,237 -> 69,918\n15,280 -> 358,623\n798,981 -> 500,683\n965,970 -> 22,970\n950,970 -> 148,970\n660,392 -> 660,884\n862,405 -> 862,527\n801,283 -> 801,361\n71,837 -> 136,837\n651,438 -> 945,144\n524,607 -> 614,517\n348,955 -> 138,955\n957,164 -> 404,717\n531,581 -> 454,504\n710,185 -> 710,271\n822,86 -> 822,966\n745,233 -> 490,488\n350,823 -> 663,823\n824,67 -> 447,444\n846,667 -> 796,617\n666,24 -> 666,906\n640,39 -> 640,145\n654,481 -> 985,481\n581,894 -> 416,729\n443,11 -> 697,11\n318,627 -> 799,146\n113,78 -> 891,856\n181,149 -> 179,151\n451,74 -> 451,262\n458,726 -> 314,726\n218,662 -> 533,662\n965,108 -> 527,108\n782,481 -> 896,367\n557,927 -> 557,938\n506,242 -> 941,677\n948,778 -> 948,629\n567,816 -> 567,956\n323,773 -> 323,364\n864,980 -> 864,12\n611,699 -> 611,886\n613,392 -> 901,104\n528,905 -> 156,905\n632,206 -> 798,40\n338,237 -> 919,818\n256,889 -> 11,644\n835,52 -> 55,832\n464,144 -> 322,144\n254,747 -> 254,509\n866,892 -> 866,916\n827,946 -> 30,149\n899,84 -> 177,806\n134,634 -> 357,634\n781,492 -> 244,492\n817,762 -> 817,976\n818,749 -> 818,860\n262,480 -> 263,480\n409,576 -> 409,698\n242,151 -> 981,890\n149,519 -> 149,557\n42,990 -> 42,930\n687,974 -> 50,337\n758,382 -> 465,382\n760,861 -> 760,934\n17,835 -> 17,915\n645,923 -> 645,648\n702,116 -> 72,746\n153,162 -> 955,964\n185,101 -> 918,834\n554,179 -> 554,353\n879,673 -> 879,949\n368,13 -> 368,512\n582,105 -> 591,114\n146,291 -> 600,745\n609,538 -> 930,538\n320,604 -> 320,146\n566,698 -> 443,575\n167,708 -> 844,31\n712,630 -> 712,421\n912,930 -> 64,82\n980,931 -> 87,38\n23,893 -> 888,28\n640,435 -> 676,435\n701,516 -> 190,516\n684,145 -> 62,767\n127,471 -> 91,435\n685,197 -> 78,197\n103,493 -> 103,522\n309,986 -> 309,850\n938,270 -> 938,300\n295,72 -> 354,72\n948,889 -> 948,455\n254,733 -> 254,175\n95,329 -> 942,329\n19,672 -> 19,445\n206,807 -> 206,934\n886,961 -> 886,690\n117,386 -> 117,292\n199,59 -> 668,528\n299,263 -> 299,878\n28,295 -> 638,905\n10,140 -> 276,406\n279,526 -> 921,526\n485,128 -> 856,499\n418,398 -> 186,398\n296,577 -> 296,521\n514,261 -> 10,765\n691,673 -> 776,758\n131,430 -> 152,430\n858,85 -> 62,85\n394,846 -> 270,970\n827,913 -> 827,376\n634,669 -> 910,669\n12,53 -> 945,986\n782,467 -> 782,421\n159,832 -> 109,832\n793,807 -> 79,93\n120,584 -> 356,584\n645,16 -> 645,355\n526,685 -> 217,376\n296,305 -> 296,929\n954,144 -> 954,839\n748,88 -> 103,733\n523,804 -> 473,754\n524,316 -> 524,756\n696,183 -> 912,183\n288,564 -> 55,797\n568,103 -> 568,348\n468,626 -> 682,412\n163,163 -> 961,961\n762,824 -> 27,89\n623,625 -> 32,34\n865,343 -> 490,718\n259,458 -> 259,33\n944,660 -> 944,176\n781,804 -> 826,759\n15,702 -> 15,553\n403,310 -> 918,825\n438,734 -> 835,734\n825,13 -> 825,245\n129,611 -> 370,611\n49,939 -> 172,939\n687,906 -> 687,532\n629,482 -> 273,126\n727,218 -> 424,218\n447,451 -> 233,451\n142,779 -> 813,779\n527,27 -> 527,804\n482,55 -> 482,200\n39,264 -> 806,264\n884,636 -> 458,636\n467,121 -> 199,389\n856,925 -> 856,666\n666,359 -> 378,359\n11,946 -> 705,946\n491,281 -> 940,730\n86,112 -> 918,944\n974,807 -> 974,707\n445,67 -> 914,536\n953,394 -> 953,822\n468,398 -> 157,87\n231,620 -> 231,646\n979,869 -> 979,911\n450,330 -> 450,79\n675,659 -> 617,659\n66,181 -> 66,723\n181,406 -> 181,192\n908,334 -> 908,526\n254,891 -> 282,891\n777,791 -> 127,141\n469,58 -> 694,58\n954,957 -> 566,569\n957,957 -> 123,123\n741,359 -> 741,986\n763,526 -> 763,101\n857,427 -> 600,170\n527,756 -> 490,719\n625,249 -> 397,249\n798,702 -> 712,702\n868,75 -> 868,853\n332,296 -> 332,629\n211,829 -> 100,940\n12,139 -> 12,218\n655,978 -> 655,242\n99,852 -> 855,96\n486,267 -> 486,855\n474,90 -> 474,244\n948,491 -> 186,491\n896,59 -> 278,677\n295,732 -> 629,732\n860,936 -> 860,556\n143,790 -> 143,26\n371,847 -> 395,847\n739,301 -> 739,44\n384,716 -> 748,716\n848,423 -> 848,923\n855,23 -> 218,660\n381,805 -> 381,438\n451,610 -> 91,610\n906,957 -> 191,957\n118,675 -> 169,675\n836,818 -> 95,818\n368,945 -> 825,488\n165,299 -> 899,299\n392,327 -> 926,861\n663,16 -> 131,548\n630,302 -> 888,302\n206,869 -> 206,331\n979,413 -> 979,204\n894,860 -> 62,28\n444,897 -> 962,379\n550,158 -> 550,885\n845,736 -> 811,736\n846,857 -> 12,857\n981,730 -> 981,154\n694,835 -> 88,835\n21,101 -> 21,385\n19,960 -> 964,15\n283,721 -> 450,721\n59,136 -> 758,835\n287,313 -> 719,313\n471,252 -> 849,630\n682,189 -> 168,189\n10,921 -> 774,157\n884,598 -> 884,540\n207,615 -> 207,443\n627,408 -> 67,408\n285,36 -> 285,792\n116,585 -> 254,585\n183,86 -> 183,702\n220,138 -> 868,138\n833,68 -> 286,615\n367,534 -> 766,534\n907,514 -> 621,228\n133,593 -> 133,581\n164,727 -> 768,123\n566,227 -> 566,555\n983,988 -> 105,110\n620,177 -> 620,821\n612,413 -> 612,176\n168,889 -> 168,210\n871,487 -> 559,175\n399,870 -> 761,870\n236,976 -> 582,630\n699,216 -> 699,887\n153,745 -> 790,745\n444,749 -> 444,257\n808,165 -> 939,165\n546,525 -> 95,976\n583,179 -> 373,389\n235,816 -> 840,816\n744,89 -> 832,89\n425,317 -> 465,357\n267,235 -> 114,82\n887,59 -> 572,374\n808,237 -> 808,626\n431,352 -> 400,383\n815,376 -> 815,905\n249,218 -> 989,958\n120,435 -> 357,198\n807,551 -> 490,234\n910,524 -> 910,725\n802,304 -> 447,659\n789,228 -> 678,339\n229,322 -> 52,322\n658,393 -> 506,393\n378,438 -> 378,569\n163,981 -> 473,671\n537,984 -> 935,586\n58,945 -> 966,37\n132,696 -> 565,263\n136,813 -> 136,284\n606,656 -> 298,348\n533,572 -> 673,712\n872,912 -> 301,341\n16,287 -> 16,613\n571,541 -> 980,950\n117,495 -> 35,495\n85,79 -> 682,676\n425,431 -> 117,739\n982,984 -> 10,12\n28,75 -> 431,478\n259,529 -> 259,436\n762,267 -> 170,859\n323,135 -> 929,741\n81,238 -> 561,718\n128,213 -> 876,961\n649,466 -> 649,540\n715,863 -> 119,863\n830,624 -> 794,660\n123,968 -> 977,114\n489,466 -> 489,811\n27,10 -> 980,963\n255,732 -> 255,484\n574,829 -> 431,829\n548,743 -> 22,217\n903,297 -> 903,763\n684,774 -> 64,154\n260,823 -> 683,823\n422,211 -> 422,826\n10,196 -> 988,196\n108,802 -> 15,802\n104,70 -> 104,452\n885,59 -> 885,36\n68,854 -> 68,774\n731,935 -> 731,718\n657,986 -> 617,986\n732,292 -> 732,32\n841,56 -> 841,83\n74,108 -> 862,896\n654,895 -> 323,895\n374,952 -> 374,217\n90,723 -> 750,63\n246,89 -> 911,754\n453,301 -> 755,301\n983,988 -> 23,28\n81,705 -> 133,757\n752,743 -> 752,397\n53,243 -> 449,639\n451,811 -> 451,187\n26,672 -> 26,699\n254,861 -> 943,861\n643,740 -> 643,966\n486,655 -> 149,318\n375,146 -> 375,973\n76,293 -> 103,293\n246,398 -> 246,248\n324,392 -> 595,121\n130,577 -> 131,577\n380,623 -> 549,454\n224,181 -> 985,942\n310,223 -> 310,594\n23,982 -> 23,738\n19,858 -> 832,858\n726,531 -> 726,578\n730,433 -> 196,433\n606,599 -> 242,599\n444,832 -> 444,238\n198,870 -> 47,870\n944,473 -> 795,473\n737,386 -> 178,945\n328,902 -> 328,644\n422,851 -> 567,851\n674,781 -> 215,781\n920,757 -> 302,757\n225,932 -> 640,517\n359,337 -> 791,337\n935,430 -> 935,262\n772,850 -> 280,358\n175,829 -> 175,451\n938,204 -> 234,908\n253,749 -> 308,749\n704,458 -> 468,458\n222,95 -> 743,616\n968,840 -> 123,840\n491,619 -> 491,889\n979,580 -> 979,459\n901,193 -> 171,923\n246,155 -> 246,680\n711,755 -> 247,755\n671,734 -> 475,734\n803,783 -> 129,109\n145,890 -> 920,115\n463,521 -> 463,700\n782,99 -> 782,311\n547,467 -> 630,467\n14,88 -> 795,869\n653,899 -> 653,90\n488,874 -> 488,570\n93,879 -> 645,327\n320,658 -> 40,938\n611,246 -> 611,22\n258,935 -> 258,829\n931,436 -> 931,263\n252,460 -> 252,461\n490,382 -> 965,382\n242,89 -> 242,617\n271,111 -> 595,435\n462,706 -> 242,486\n557,328 -> 747,328\n486,99 -> 486,333\n156,40 -> 488,372\n323,482 -> 138,297\n595,539 -> 812,756\n923,861 -> 377,315\n934,952 -> 256,274\n314,777 -> 314,12\n508,47 -> 508,144\n888,807 -> 701,807\n745,774 -> 878,907\n740,716 -> 740,215\n62,43 -> 62,12\n571,196 -> 454,196\n568,107 -> 408,107\n549,676 -> 404,676\n595,573 -> 595,970\n148,168 -> 193,123\n763,71 -> 759,71\n797,64 -> 307,64\n959,984 -> 32,57\n457,562 -> 634,562\n127,521 -> 601,47\n112,296 -> 112,120\n148,755 -> 451,755\n636,494 -> 870,494\n910,242 -> 945,277\n912,911 -> 912,892\n759,815 -> 759,314\n391,285 -> 391,959\n455,460 -> 182,460\n112,78 -> 112,385\n842,179 -> 842,592\n236,424 -> 421,424\n508,907 -> 30,907\n637,219 -> 34,822\n503,375 -> 503,205\n570,533 -> 626,533\n658,11 -> 658,94\n179,286 -> 326,433\n918,214 -> 200,932\n339,887 -> 81,887\n794,91 -> 50,835\n225,356 -> 225,261\n80,160 -> 80,335\n148,64 -> 847,763\n595,393 -> 941,393"
)

func main() {
	if os.Getenv("PART") == "part1" {
		fmt.Printf("\npart1: %s\n", count(false, input))
	}

	if os.Getenv("PART") == "part2" {
		fmt.Printf("\npart2: %s\n", count(true, input))
	}
}

func count(diagonals bool, input string) string {
	pipes := readPipes(diagonals, input)
	count := 0
	for _, n := range pipes {
		if n >= 2 {
			count++
		}
	}

	return strconv.Itoa(count)
}

type coords struct {
	x, y int
}

func (c coords) String() string {
	return fmt.Sprintf("(%d,%d)", c.x, c.y)
}

func readPipes(diagonals bool, lines string) map[coords]int {
	starts := []coords{}
	stops := []coords{}

	for _, l := range strings.Split(lines, "\n") {
		parts := strings.Split(l, " -> ")
		startStrings := strings.Split(parts[0], ",")
		stopStrings := strings.Split(parts[1], ",")

		start := getCoords(startStrings)
		stop := getCoords(stopStrings)

		starts = append(starts, start)
		stops = append(stops, stop)
	}

	return walkPipes(diagonals, starts, stops)
}

func walkPipes(diagonals bool, starts []coords, stops []coords) map[coords]int {
	pipes := map[coords]int{}
	for i := range starts {
		//fmt.Printf("%v - %v\n", starts[i], stops[i])

		dir := coords{}
		if starts[i].x < stops[i].x {
			dir.x = 1
		} else if starts[i].x > stops[i].x {
			dir.x = -1
		}

		if starts[i].y < stops[i].y {
			dir.y = 1
		} else if starts[i].y > stops[i].y {
			dir.y = -1
		}

		if !diagonals && dir.x != 0 && dir.y != 0 {
			continue
		}

		cur := starts[i]
		for {
			pipes[cur] += 1
			if cur == stops[i] {
				break
			}

			cur.x += dir.x
			cur.y += dir.y
		}
	}

	return pipes
}

func getCoords(s []string) coords {
	x, err := strconv.Atoi(s[0])
	if err != nil {
		panic(err)
	}

	y, err := strconv.Atoi(s[1])
	if err != nil {
		panic(err)
	}

	return coords{x, y}
}
